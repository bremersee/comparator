<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Comparator"><sessioninfo id="jenkins-c11c6306" start="1641853516717" dump="1641853528162"/><package name="org/bremersee/comparator/spring"><class name="org/bremersee/comparator/spring/ComparatorSpringUtils" sourcefilename="ComparatorSpringUtils.java"><method name="toSort" desc="(Ljava/util/Collection;)Lorg/springframework/data/domain/Sort;" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSort" desc="(Lorg/springframework/data/domain/Sort;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSortOrder" desc="(Lorg/bremersee/comparator/model/ComparatorField;)Lorg/springframework/data/domain/Sort$Order;" line="78"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSortOrder" desc="(Lorg/springframework/data/domain/Sort$Order;)Lorg/bremersee/comparator/model/ComparatorField;" line="101"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ComparatorSpringUtils.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="4"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/bremersee/comparator"><class name="org/bremersee/comparator/ComparatorChain" sourcefilename="ComparatorChain.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="39"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="45"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="54"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ValueComparator" sourcefilename="ValueComparator.java"><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/model/ComparatorField;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/model/ComparatorField;Lorg/bremersee/comparator/ValueExtractor;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZZZ)V" line="85"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZZZLorg/bremersee/comparator/ValueExtractor;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="113"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="165"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ComparatorBuilder" sourcefilename="ComparatorBuilder.java"><method name="builder" desc="()Lorg/bremersee/comparator/ComparatorBuilder;" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/util/Comparator;)Lorg/bremersee/comparator/ComparatorBuilder;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;Ljava/util/Comparator;)Lorg/bremersee/comparator/ComparatorBuilder;" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;ZZZ)Lorg/bremersee/comparator/ComparatorBuilder;" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/bremersee/comparator/model/ComparatorField;)Lorg/bremersee/comparator/ComparatorBuilder;" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/bremersee/comparator/model/ComparatorField;Lorg/bremersee/comparator/ValueExtractor;)Lorg/bremersee/comparator/ComparatorBuilder;" line="133"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/bremersee/comparator/ComparatorBuilder;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;Lorg/bremersee/comparator/ValueExtractor;)Lorg/bremersee/comparator/ComparatorBuilder;" line="163"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lorg/bremersee/comparator/model/ComparatorFields;)Lorg/bremersee/comparator/ComparatorBuilder;" line="179"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lorg/bremersee/comparator/model/ComparatorFields;Lorg/bremersee/comparator/ValueExtractor;)Lorg/bremersee/comparator/ComparatorBuilder;" line="194"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromWellKnownText" desc="(Ljava/lang/String;)Lorg/bremersee/comparator/ComparatorBuilder;" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="95"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ValueExtractorException" sourcefilename="ValueExtractorException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/WellKnownTextParser" sourcefilename="WellKnownTextParser.java"><method name="getProperties" desc="()Lorg/bremersee/comparator/model/WellKnownTextProperties;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Comparator;" line="77"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildComparatorFields" desc="(Ljava/lang/String;)Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildComparatorField" desc="(Ljava/lang/String;)Lorg/bremersee/comparator/model/ComparatorField;" line="138"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/util/function/Function;)Lorg/bremersee/comparator/WellKnownTextParser;" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/util/function/Function;Lorg/bremersee/comparator/model/WellKnownTextProperties;)Lorg/bremersee/comparator/WellKnownTextParser;" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildComparatorFields$0" desc="(Ljava/lang/String;)Ljava/util/List;" line="108"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="197"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ComparatorFieldsConverter" sourcefilename="ComparatorFieldsConverter.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/model/WellKnownTextProperties;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/WellKnownTextParser;)V" line="54"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lorg/bremersee/comparator/model/ComparatorFields;" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ComparatorException" sourcefilename="ComparatorException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/WellKnownTextParser$Impl" sourcefilename="WellKnownTextParser.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;Lorg/bremersee/comparator/model/WellKnownTextProperties;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Lorg/bremersee/comparator/model/WellKnownTextProperties;" line="228"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/bremersee/comparator/model/ComparatorField;)Ljava/util/Comparator;" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ComparatorBuilder$DefaultComparatorBuilder" sourcefilename="ComparatorBuilder.java"><method name="&lt;init&gt;" desc="()V" line="248"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;Lorg/bremersee/comparator/ValueExtractor;Ljava/util/Comparator;)Lorg/bremersee/comparator/ComparatorBuilder;" line="259"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;ZZZLorg/bremersee/comparator/ValueExtractor;)Lorg/bremersee/comparator/ComparatorBuilder;" line="273"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromWellKnownText" desc="(Ljava/lang/String;Lorg/bremersee/comparator/WellKnownTextParser;)Lorg/bremersee/comparator/ComparatorBuilder;" line="282"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/util/Comparator;" line="293"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ComparatorFieldConverter" sourcefilename="ComparatorFieldConverter.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/model/WellKnownTextProperties;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/bremersee/comparator/WellKnownTextParser;)V" line="53"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lorg/bremersee/comparator/model/ComparatorField;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/ValueExtractor" sourcefilename="ValueExtractor.java"><method name="findField" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findField" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;" line="64"><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPossibleMethodNames" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMethod" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;" line="114"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;" line="133"><counter type="INSTRUCTION" missed="3" covered="47"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findMethod$0" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;" line="115"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="190"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="5" covered="40"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/DelegatingComparator" sourcefilename="DelegatingComparator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Comparator;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/bremersee/comparator/ValueExtractor;Ljava/util/Comparator;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="71"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/DefaultValueExtractor" sourcefilename="DefaultValueExtractor.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findValue" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimFieldPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ComparatorChain.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="3" ci="6" mb="1" cb="1"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="3"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="54"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparatorFieldsConverter.java"><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="1" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueComparator.java"><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="4"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="4"/><line nr="135" mi="0" ci="9" mb="1" cb="5"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="1" cb="3"/><line nr="144" mi="0" ci="9" mb="1" cb="5"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="165"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultValueExtractor.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="6"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DelegatingComparator.java"><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="2"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueExtractorException.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparatorFieldConverter.java"><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="1" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparatorException.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparatorBuilder.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="1" cb="1"/><line nr="164" mi="0" ci="10" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="1" ci="8" mb="1" cb="1"/><line nr="194" mi="1" ci="9" mb="1" cb="1"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="1" cb="1"/><line nr="260" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="12" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="2"/><line nr="283" mi="0" ci="8" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="158"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ValueExtractor.java"><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="1" cb="3"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="16" mb="0" cb="2"/><line nr="68" mi="2" ci="9" mb="2" cb="4"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="4"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="3" ci="6" mb="1" cb="1"/><line nr="137" mi="0" ci="16" mb="0" cb="2"/><line nr="138" mi="0" ci="9" mb="1" cb="3"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="1" cb="1"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="1" cb="1"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="190"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="5" covered="40"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WellKnownTextParser.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="4"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="212"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="49"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="53" covered="1033"/><counter type="BRANCH" missed="22" covered="132"/><counter type="LINE" missed="10" covered="244"/><counter type="COMPLEXITY" missed="24" covered="113"/><counter type="METHOD" missed="3" covered="57"/><counter type="CLASS" missed="0" covered="13"/></package><package name="org/bremersee/comparator/model"><class name="org/bremersee/comparator/model/ImmutableWellKnownTextProperties$InitShim" sourcefilename="ImmutableWellKnownTextProperties.java"/><class name="org/bremersee/comparator/model/ComparatorField" sourcefilename="ComparatorField.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZZZ)V" line="133"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getField" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAsc" desc="()Z" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoreCase" desc="()Z" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullIsFirst" desc="()Z" line="173"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toWkt" desc="()Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toWkt" desc="(Lorg/bremersee/comparator/model/WellKnownTextProperties;)Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="224"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/model/ImmutableWellKnownTextProperties" sourcefilename="ImmutableWellKnownTextProperties.java"/><class name="org/bremersee/comparator/model/WellKnownTextProperties" sourcefilename="WellKnownTextProperties.java"><method name="builder" desc="()Lorg/bremersee/comparator/model/ImmutableWellKnownTextProperties$Builder;" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaults" desc="()Lorg/bremersee/comparator/model/WellKnownTextProperties;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldSeparator" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldArgsSeparator" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAscValue" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescValue" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectionValue" desc="(Z)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAsc" desc="(Ljava/lang/String;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCaseInsensitiveValue" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCaseSensitiveValue" desc="()Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreCaseValue" desc="(Z)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCaseIgnored" desc="(Ljava/lang/String;)Z" line="160"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullIsLastValue" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullIsFirstValue" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullIsFirstValue" desc="(Z)Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullFirst" desc="(Ljava/lang/String;)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/model/ComparatorFields" sourcefilename="ComparatorFields.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFields" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toWkt" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toWkt" desc="(Lorg/bremersee/comparator/model/WellKnownTextProperties;)Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toWkt$0" desc="(Lorg/bremersee/comparator/model/WellKnownTextProperties;Lorg/bremersee/comparator/model/ComparatorField;)Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/model/ObjectFactory" sourcefilename="ObjectFactory.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createComparatorField" desc="()Lorg/bremersee/comparator/model/ComparatorField;" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createComparatorFields" desc="()Lorg/bremersee/comparator/model/ComparatorFields;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/bremersee/comparator/model/ImmutableWellKnownTextProperties$Builder" sourcefilename="ImmutableWellKnownTextProperties.java"/><sourcefile name="WellKnownTextProperties.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><line nr="115" mi="0" ci="15" mb="1" cb="5"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="2"/><line nr="160" mi="0" ci="14" mb="1" cb="5"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectFactory.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImmutableWellKnownTextProperties.java"/><sourcefile name="ComparatorFields.java"><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparatorField.java"><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="215"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="54"/><counter type="COMPLEXITY" missed="3" covered="43"/><counter type="METHOD" missed="1" covered="34"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="56" covered="1342"/><counter type="BRANCH" missed="24" covered="170"/><counter type="LINE" missed="11" covered="326"/><counter type="COMPLEXITY" missed="27" covered="169"/><counter type="METHOD" missed="4" covered="95"/><counter type="CLASS" missed="0" covered="18"/></report>